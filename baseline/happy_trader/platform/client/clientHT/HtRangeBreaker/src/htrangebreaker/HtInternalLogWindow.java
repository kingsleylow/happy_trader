/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * HtInternalLogWindow.java
 *
 * Created on 05.09.2010, 15:18:57
 */
package htrangebreaker;

import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import javax.swing.SwingUtilities;
import org.jdesktop.application.Action;

/**
 *
 * @author DanilinS
 */
public class HtInternalLogWindow extends javax.swing.JInternalFrame {

	private static HtInternalLogWindow instance_m = null;

	/** Creates new form HtInternalLogWindow */
	public HtInternalLogWindow() {
		initComponents();
		instance_m = this;
	}

	public static HtInternalLogWindow instance() {
		return instance_m;
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        jClearBtn = new javax.swing.JButton();
        jCopyBtn = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMaximizable(true);
        setResizable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(htrangebreaker.HtRangeBreakerApp.class).getContext().getResourceMap(HtInternalLogWindow.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTextArea.setColumns(20);
        jTextArea.setEditable(false);
        jTextArea.setFont(resourceMap.getFont("jTextArea.font")); // NOI18N
        jTextArea.setRows(5);
        jTextArea.setName("jTextArea"); // NOI18N
        jScrollPane1.setViewportView(jTextArea);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(htrangebreaker.HtRangeBreakerApp.class).getContext().getActionMap(HtInternalLogWindow.class, this);
        jClearBtn.setAction(actionMap.get("onClear")); // NOI18N
        jClearBtn.setText(resourceMap.getString("jClearBtn.text")); // NOI18N
        jClearBtn.setName("jClearBtn"); // NOI18N

        jCopyBtn.setAction(actionMap.get("onCopy")); // NOI18N
        jCopyBtn.setText(resourceMap.getString("jCopyBtn.text")); // NOI18N
        jCopyBtn.setName("jCopyBtn"); // NOI18N

        jCheckBox1.setText(resourceMap.getString("jTopCb.text")); // NOI18N
        jCheckBox1.setToolTipText(resourceMap.getString("jTopCb.toolTipText")); // NOI18N
        jCheckBox1.setName("jTopCb"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 117, Short.MAX_VALUE)
                .addComponent(jCopyBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jClearBtn)
                .addGap(18, 18, 18))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jClearBtn)
                    .addComponent(jCopyBtn)
                    .addComponent(jCheckBox1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	public void addErrorEntry(final String message) {
		final boolean on_top = jCheckBox1.isSelected();
		
		if (SwingUtilities.isEventDispatchThread()) {
			addMessageToGlobalList(message);
			if (on_top) {
				toFront();
			}
		} else {
			SwingUtilities.invokeLater(new Runnable() {

				public void run() {
					addMessageToGlobalList(message);
					if (on_top) {
						toFront();
					}

				}
			});
		}
	}

	public void addEntry(final String message) {
		

		if (SwingUtilities.isEventDispatchThread()) {
			addMessageToGlobalList(message);
		} else {
			SwingUtilities.invokeLater(new Runnable() {

				public void run() {
					addMessageToGlobalList(message);
				//pthis.toFront();

				}
			});
		}
	}

	@Action
	public void onClear() {
		jTextArea.setText("");
	}

	@Action
	public void onCopy() {
		StringSelection ss = new StringSelection(jTextArea.getText());
		Toolkit.getDefaultToolkit().getSystemClipboard().setContents(ss, null);

	}

	private void addMessageToGlobalList(String message) {
		if (message != null) {
			jTextArea.append(message);
			jTextArea.append("\n");
		}
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JButton jClearBtn;
    private javax.swing.JButton jCopyBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea;
    // End of variables declaration//GEN-END:variables
}
